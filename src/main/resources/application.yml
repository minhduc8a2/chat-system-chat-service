spring:
  application:
    name: chat-service
  #   config:
  # import: optional:configserver:http://localhost:8080
  cloud:
    config:
      enabled: false
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: chat-service-consumer-1
    producer:
      bootstrap-servers: localhost:9092

  datasource:
    url: jdbc:postgresql://localhost:5435/chat_service_db
    username: minhduc8a2
    password: 123456
  jpa:
    hibernate:
      ddl-auto: create
  data:
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis

kafka-config:
  chat-topic-name: chat-messages
  chat-partitions: 3
  chat-replicas: 1

server:
  port: 8084
  id: 0

jwt:
  secret: X0iDLiUGr5em1s0hWKnZCMdJ+irvhURKSo1faNKpGxY=
  expiration-time: 900000
  refresh-token:
    expiration-time: 604800000

api:
  version: v1
  base-url: /api/${api.version}
  chat-service: ${api.base-url}/chat
  chat-rooms: ${api.chat-service}/chat-rooms

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

presence:
  redis-key-format: "presence:user:%s"
  redis-key-format-for-extract-user-id: "presence:user:\\d+"

auth-service:
  name: "AUTH-SERVICE"

notification-service:
  name: "NOTIFICATION-SERVICE"
